app.name=DSS
app.home=/opt/rdsm
app.version=1.0.0-b71

spring.datasource.default.url=jdbc:postgresql://localhost:5432/rdsm_dss
spring.datasource.default.username=rdsm_db
spring.datasource.default.password=rdsm_db
spring.datasource.default.hikari.registerMbeans=true
spring.datasource.default.hikari.maximum-pool-size=3
spring.datasource.default.hikari.minimum-idle=5
spring.datasource.default.hikari.idle-timeout=300000

spring.datasource.logs.url=jdbc:postgresql://localhost:5432/rdsm_dss
spring.datasource.logs.username=rdsm_db
spring.datasource.logs.password=rdsm_db
spring.datasource.logs.hikari.registerMbeans=true
spring.datasource.logs.hikari.maximum-pool-size=3
spring.datasource.logs.hikari.minimum-idle=5
spring.datasource.logs.hikari.idle-timeout=300000

# Uncomment to log hikari log
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE

resttemplate.connect.timeout_s=${RESTTEMPLATE_CONNECT_TIMEOUT_S:30}
resttemplate.read.timeout_min=${RESTTEMPLATE_READ_TIMEOUT_MIN:10}

spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

spring.jpa.open-in-view=true
spring.jpa.hibernate.ddl-auto=none

spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.ack-mode=manual

server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
spring.servlet.multipart.max-file-size=1500MB
spring.servlet.multipart.max-request-size=1500MB

server.port=${HCDS_SERVER_PORT:8080}

locale=en
dss.sysadmin.login=sysadmin
app.crypto.key=pmvz16mlV9OQYUOTRvDGgHYo7GeSXIaT4Acw
security.jwt.secret=m2dJeAM2zMxdG8yL
gddslib.dir=/var/lib/rdsm-libs
app.jdbc.drivers.dir=${JDBC_DRIVERS_DIR:jdbc-drivers-pack1/target/jdbcdrivers}

kafka.bootstrapAddress.override=${KAFKA_BOOTSTRAP_ADDRESS_OVERRIDE:http://kafka:8082}
kafka.env.prefix=${KAFKA_ENV_PREFIX:test}
kafka.gdds.topic.court=${kafka.env.prefix}-gdds-court
kafka.dss.topic.court=${kafka.env.prefix}-dss-court
kafka.gdds.topic.query=${kafka.env.prefix}-gdds-query
kafka.dss.topic.query=${kafka.env.prefix}-dss-query
kafka.topic.network-update=${kafka.env.prefix}-dss-network-update
kafka.topic.dss-update-status=${kafka.env.prefix}-dss-update-status


